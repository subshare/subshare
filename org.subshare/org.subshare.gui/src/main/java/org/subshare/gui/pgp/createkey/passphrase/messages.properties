PassphrasePane.headerText.text=You can - and should - protect your new OpenPGP key with a passphrase.\
\n\n\
Your private key will be encrypted with this passphrase, so that nobody except you can use it - even if you lose\n\
your computer or your backup-USB-stick.\
\n\n\
You should choose a very secure passphrase, because this will be the weakest link in the security chain! This program's\n\
elaborate cryptography cannot reliably protect your data, if you use a weak passphrase!\
\n\n\
You might want to write this passphrase onto a sheet of paper (to be locked away in a safe!). Do NOT write it down\n\
on your computer (e.g. in a text file)!!! And if writing it on paper, keep the paper far away from your computers!\n\
The best place is really in a vault!\
\n\n\
If you forget this passphrase or otherwise lose the OpenPGP key we're about to create, you lose your data! In this event,\n\
NOBODY can help you recover your data. This strong protection is the very point of this program's strong cryptography.\n\
We are going to do a backup later, together. So don't worry - if you follow our instructions, you'll be fine.

PassphrasePane.passphrase1Status[empty].message=Empty\!
PassphrasePane.passphrase1Status[empty].tooltipText=The passphrase must not be empty\!\
\n\n\
If you are absolutely sure that you do not want to protect your key with a passphrase, please check the box below\!

PassphrasePane.passphrase1Status[tooFewCharTypes].message=Too few character types\!
PassphrasePane.passphrase1Status[tooFewCharTypes].tooltipText=You must use at least 2 different character types\!\
\n\n\
Character types are digits (0 ... 9), lower-case letters ('a', 'b', 'c'), upper-case letters ('A', 'B', 'C') and special characters (\#,.+-/ and similar)\!\
\n\n\
You can use characters from other alphabets (e.g. '�', '�' or '\u0E01'), but be warned: You might not be able to enter them on every computer\!

PassphrasePane.passphrase1Status[fewCharTypes].message=Few character types\!
PassphrasePane.passphrase1Status[fewCharTypes].tooltipText=It is recommended to use 3 different character types.\
\n\n\
Character types are digits (0 ... 9), lower-case letters ('a', 'b', 'c'), upper-case letters ('A', 'B', 'C') and special characters (\#,.+-/ and similar)\!\
\n\n\
You can use characters from other alphabets (e.g. '�', '�' or '\u0E01'), but be warned: You might not be able to enter them on every computer\!

PassphrasePane.passphrase1Status[ok].message=OK.
PassphrasePane.passphrase1Status[ok].toolTipText=Your passphrase is OK, but could be more secure.

PassphrasePane.passphrase1Status[secure].message=Secure.
PassphrasePane.passphrase1Status[secure].toolTipText=Great\! Your passphrase looks secure.

PassphrasePane.passphrase1Status[short].message=Pretty short\!
PassphrasePane.passphrase1Status[short].tooltipText=The passphrase is still pretty short. A minimum length of 15 characters is recommended.

PassphrasePane.passphrase1Status[tooShort].message=Too short\!
PassphrasePane.passphrase1Status[tooShort].tooltipText=The passphrase is too short\! It should have at least 10 characters.

PassphrasePane.passphrase2Status[mismatch].message=The repetition does not match the first passphrase\!
PassphrasePane.passphrase2Status[mismatch].toolTipText=You must enter the passphrase twice to avoid typing errors.\
\n\n\
The second passphrase you entered is not the same as the first.
