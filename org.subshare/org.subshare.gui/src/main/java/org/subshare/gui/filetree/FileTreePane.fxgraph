package org.subshare.gui.filetree

import javafx.scene.layout.BorderPane
import javafx.scene.control.TreeTableView
import javafx.scene.control.TreeTableColumn

import org.subshare.gui.filetree.FileTreeItem
import javafx.scene.control.cell.TreeItemPropertyValueFactory
import javafx.scene.layout.HBox
import javafx.scene.layout.VBox
import javafx.scene.control.CheckBox
import javafx.geometry.Insets
import javafx.scene.control.Button
import javafx.scene.image.ImageView
import javafx.scene.image.Image
import javafx.scene.control.Tooltip

dynamic component FileTreePane resourcefile 'messages.properties' {
	BorderPane {
		prefWidth : 520,
		
		center : TreeTableView<FileTreeItem<?>> id treeTableView {
				columns : [
					TreeTableColumn<FileTreeItem<?>, String> id nameTreeTableColumn {
						text : "Name",
						prefWidth : 300,
						cellValueFactory : TreeItemPropertyValueFactory<FileTreeItem<?>, String> {
							property : "name"
						}
					},
					TreeTableColumn<FileTreeItem<?>, String> id sizeTreeTableColumn {
						text : "Size",
						prefWidth : 100,
						cellValueFactory : TreeItemPropertyValueFactory<FileTreeItem<?>, String> {
							property : "size"
						}
					},
//					TreeTableColumn<FileTreeItem<?>, String> id createdTreeTableColumn {
//						text : "Created",
//						prefWidth : 100,
//						cellValueFactory : TreeItemPropertyValueFactory<FileTreeItem<?>, String> {
//							property : "created"
//						}
//					},
					TreeTableColumn<FileTreeItem<?>, String> id lastModifiedTreeTableColumn {
						text : "Modified",
						prefWidth : 120,
						cellValueFactory : TreeItemPropertyValueFactory<FileTreeItem<?>, String> {
							property : "lastModified"
						}
					}
				]
			},
		bottom : HBox {
			children : [
				CheckBox id showHiddenFilesCheckBox {
					text : rstring 'FileTreePane.showHiddenFilesCheckBox.text'
				},
				Button id refreshButton {
					graphic : ImageView { image : Image { url : "@refresh_16x16.png" } },
					tooltip : Tooltip { text : "Refresh: Read the files and directories from the file system, again." },
					onAction : controllermethod refreshButtonClicked,
					static margin : Insets {
						left : 16
					}
				},
				Button id createDirButton {
					graphic : ImageView { image : Image { url : "@create-dir_16x16.png" } },
					tooltip : Tooltip { text : "Create a new folder in the selected folder." },
					onAction : controllermethod createDirButtonClicked,
					static margin : Insets {
						left : 4
					}
				},
				Button id renameButton {
					graphic : ImageView { image : Image { url : "@rename_16x16.png" } },
					tooltip : Tooltip { text : "Rename the selected file (or folder)." },
					onAction : controllermethod renameButtonClicked,
					static margin : Insets {
						left : 4
					}
				},
				Button id deleteButton {
					graphic : ImageView { image : Image { url : "@delete_16x16.png" } },
					tooltip : Tooltip { text : "Delete the selected files (or folders)." },
					onAction : controllermethod deleteButtonClicked,
					static margin : Insets {
						left : 4
					}
				}
			],
			static margin : Insets {
				top : 8
			}
		}
	}
}
