package org.subshare.gui.server

import javafx.scene.layout.BorderPane
//import javafx.scene.layout.GridPane
import org.subshare.gui.server.ServerPane
import org.subshare.gui.server.ServerRepoListItem
import javafx.scene.control.cell.TextFieldTableCell
import javafx.scene.control.Label
import javafx.scene.control.TableView
import javafx.scene.control.TableColumn
import javafx.scene.control.cell.PropertyValueFactory
import javafx.scene.layout.FlowPane
import javafx.scene.control.Button
import javafx.scene.image.ImageView
import javafx.scene.image.Image
import javafx.scene.control.Tooltip
import javafx.scene.layout.GridPane
import javafx.geometry.Insets

dynamic component ServerPane resourcefile "messages.properties" {
	GridPane {
		hgap : 8,
		vgap : 8,
		padding : Insets { left : 8, top : 8, right : 8, bottom : 8 },

		FlowPane {
			Button id createRepositoryButton {
				graphic : ImageView { image : Image { url : "@create-repository_24x24.png" } },
				tooltip : Tooltip { text : "Create a new repository on this server.&#010;&#010;You'll select a local directory which is going to be uploaded to (and kept in-sync with) the new repository." },
				onAction : controllermethod createRepositoryButtonClicked
			},
			Button id checkOutButton {
				graphic : ImageView { image : Image { url : "@check-out_24x24.png" } },
				tooltip : Tooltip { text : "Check the selected repository out.&#010;&#010;You'll select a local directory into which the selected server-repository is going to be downloaded (and kept in-sync with, afterwards)." },
				onAction : controllermethod checkOutButtonClicked
			}
//			,
//			Button id syncButton {
//				graphic : ImageView { image : Image { url : "@sync_24x24.png" } },
//				tooltip : Tooltip { text : "Synchronize the selected repositories now." },
//				onAction : controllermethod syncButtonClicked
//			}
		},

		TableView < ServerRepoListItem > id tableView {
			editable : true,

			columns : [
				TableColumn < ServerRepoListItem, String > id nameColumn {
					text : "Name",
					prefWidth : 200,
					cellValueFactory : PropertyValueFactory < ServerRepoListItem, String > {
						property : "name"
					}
//					,
//					cellFactory : TextFieldTableCell createdby forTableColumn { }
				}
			],
			
			static rowIndex : 1,
			static hgrow : "ALWAYS",
			static vgrow : "ALWAYS"
		}
	}
}
