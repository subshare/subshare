package org.subshare.gui.selectuser

import javafx.scene.layout.GridPane
import javafx.scene.control.TableView
import javafx.scene.control.TableColumn
import javafx.scene.control.cell.PropertyValueFactory

import org.subshare.gui.userlist.UserListItem
import javafx.scene.control.ButtonBar
import javafx.scene.control.Button
import javafx.scene.image.ImageView
import javafx.scene.image.Image
import javafx.scene.control.Label
import javafx.scene.text.Text
import javafx.scene.control.TextField
import javafx.scene.layout.HBox
import javafx.geometry.Insets

dynamic component SelectUserPane resourcefile 'messages.properties' {
	GridPane {
		prefWidth : 400,
		prefHeight : 300,
		
		children : [
			Text id headerText {
				static columnIndex : 0,
				static rowIndex : 0
			},

			HBox {
				children : [
					Label {
						text : "Filter: "
					},
					TextField id filterTextField {
						static hgrow : "ALWAYS",
						static margin : Insets {
							left : 4
						}
					}
				],
				static margin : Insets {
					top : 4,
					bottom : 4
				},
				static columnIndex : 0,
				static rowIndex : 1
			},

			TableView < UserListItem > id tableView {
				columns : [
					TableColumn < UserListItem, String > id firstNameColumn {
						text : "First name",
						prefWidth : 100,
						cellValueFactory : PropertyValueFactory < UserListItem, String > {
							property : "firstName"
						}
					},
					TableColumn < UserListItem, String > id lastNameColumn {
						text : "Last name",
						prefWidth : 100,
						cellValueFactory : PropertyValueFactory < UserListItem, String > {
							property : "lastName"
						}
					},
					TableColumn < UserListItem, String > id emailColumn {
						text : "E-mail",
						prefWidth : 200,
						cellValueFactory : PropertyValueFactory < UserListItem, String > {
							property : "email"
						}
					}
				],
				static fillHeight : true,
				static fillWidth : true,
				static vgrow : "ALWAYS",
				static hgrow : "ALWAYS",
				static columnIndex : 0,
				static rowIndex : 2
			},
			ButtonBar {
				buttons : [
					Button id okButton {
						graphic : ImageView { image : Image { url : "@ok-24x24.png" } },
						text : "OK",
						defaultButton : true,
						onAction : controllermethod okButtonClicked
					},
					Button id cancelButton {
						graphic : ImageView { image : Image { url : "@cancel-24x24.png" } },
						text : "Cancel",
						cancelButton : true,
						onAction : controllermethod cancelButtonClicked
					}
				],
				static vgrow : "NEVER",
				static columnIndex : 0,
				static rowIndex : 3,
				static columnSpan : 1
			}
		]
	}
}
