package org.subshare.gui.localrepo.directory

import javafx.scene.layout.GridPane
import javafx.scene.control.cell.PropertyValueFactory
import javafx.scene.control.TextField
import javafx.geometry.Insets
import javafx.scene.layout.FlowPane
import javafx.scene.control.Button
import javafx.scene.image.ImageView
import javafx.scene.image.Image
import javafx.scene.control.CheckBox
import javafx.scene.control.ComboBox
import javafx.scene.control.Tooltip
import javafx.scene.control.TabPane
import javafx.scene.control.Tab
import javafx.scene.control.TableView
import javafx.scene.control.TableColumn
import javafx.scene.layout.VBox
import javafx.scene.layout.HBox
import javafx.scene.control.Label

import org.subshare.core.dto.PermissionType
import org.subshare.gui.filetree.FileTreePane
import org.subshare.gui.userlist.UserListPane
import org.subshare.gui.selectuser.SelectUserPane
import org.subshare.gui.localrepo.directory.PermissionTypeItem
import org.subshare.gui.localrepo.directory.UserListItem

dynamic component LocalRepoDirectoryPane resourcefile 'messages.properties' {
	VBox {
		FlowPane {
			Button id syncButton {
				graphic : ImageView { image : Image { url : "@sync_24x24.png" } },
				tooltip : Tooltip { text : "Synchronize this repository now." },
				onAction : controllermethod syncButtonClicked
			},
			Button id inviteButton {
				graphic : ImageView { image : Image { url : "@invite_24x24.png" } },
				tooltip : Tooltip { text : "Invite someone to share this repository at this sub-directory.&#010;&#010;You'll select another user and an invitation token is going to be created for this user." },
				onAction : controllermethod inviteButtonClicked
			},
			Button id refreshButton { // TODO replace by or at least add automatic refresh via listeners!
				graphic : ImageView { image : Image { url : "@refresh_24x24.png" } },
				tooltip : Tooltip { text : "Refresh all data shown here." },
				onAction : controllermethod refreshButtonClicked
			},
			Button id exportFromHistoryButton,

			static margin : Insets { left : 8, right : 8, top : 8, bottom : 8 }
		},

		TabPane id tabPane {
			tabClosingPolicy : "UNAVAILABLE",
			Tab id generalTab {
				text : "General",
				content : GridPane {

					TextField id pathTextField {
						editable : false,
						static columnIndex : 0,
						static rowIndex : 1,
						static margin : Insets { left: 8, top: 8, right: 8, bottom : 8 },
						static hgrow : "ALWAYS"
					},

					FileTreePane id fileTreePane {
						selectionMode: "MULTIPLE",
						refreshButtonVisible : false,
		
						static columnIndex : 0,
						static rowIndex : 2,
						static margin : Insets { left: 8, right: 8, bottom : 8 },
						static hgrow : "ALWAYS",
						static vgrow : "ALWAYS"
					}
				}
			},

			Tab id historyTab {
				text : "History"
			},

			Tab id securityTab {
				text : "Security"
			}
		}
	}
}
