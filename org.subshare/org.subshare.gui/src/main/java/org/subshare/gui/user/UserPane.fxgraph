package org.subshare.gui.user

import javafx.beans.property.StringProperty

import javafx.scene.layout.GridPane
import javafx.scene.layout.FlowPane
import javafx.scene.control.Button
import javafx.scene.image.ImageView
import javafx.scene.image.Image
import javafx.scene.control.Tooltip
import javafx.scene.control.Label
import javafx.scene.control.TextField
import javafx.scene.control.TableView
import javafx.scene.control.TableColumn
import javafx.scene.control.TreeTableView
import javafx.scene.control.TreeView
import javafx.scene.control.TreeTableColumn
import javafx.scene.control.cell.PropertyValueFactory
import javafx.scene.control.cell.TreeItemPropertyValueFactory

import org.subshare.gui.user.EmailWrapper
import org.subshare.gui.pgp.keytree.PgpKeyTreeItem
import org.subshare.gui.pgp.keytree.PgpKeyTreePane
import javafx.geometry.Insets

dynamic component UserPane {
	GridPane {
		hgap : 8,
		vgap : 8,
		padding : Insets { left : 8, top : 8, right : 8, bottom : 8 },

		FlowPane {
			Button id createPgpKeyButton {
				graphic : ImageView { image : Image { url : "@create-pgp-key_24x24.png" } },
				tooltip : Tooltip { text : "Create a new PGP key pair." },
				onAction : controllermethod createPgpKeyButtonClicked
			},
			Button id signPgpKeyButton {
				graphic : ImageView { image : Image { url : "@sign-pgp-key_24x24.png" } },
				tooltip : Tooltip { text : "Certify the authenticity of the selected PGP key (sign it)." },
				onAction : controllermethod signPgpKeyButtonClicked,
				static margin : Insets { left : 8 }
			},
			Button id ownerTrustButton {
				graphic : ImageView { image : Image { url : "@owner-trust_24x24.png" } },
				tooltip : Tooltip { text : "Set the owner trust for the selected or all keys of this user." },
				onAction : controllermethod ownerTrustButtonClicked
			},
//				Button id importPgpKeyButton {
//					graphic : ImageView { image : Image { url : "@import-pgp-key_24x24.png" } },
//					tooltip : Tooltip { text : "Import one or more PGP keys from a file." },
//					onAction : controllermethod importPgpKeyButtonClicked
//				},
			Button id exportPgpKeyButton {
				graphic : ImageView { image : Image { url : "@export-pgp-key_24x24.png" } },
				tooltip : Tooltip { text : "Export the selected PGP keys into a file." },
				onAction : controllermethod exportPgpKeyButtonClicked,
				static margin : Insets { left : 8 }
			},
			Button id assignPgpKeyToThisUserButton {
				graphic : ImageView { image : Image { url : "@assign-pgp-key-to-this-user_24x24.png" } },
				tooltip : Tooltip { text : "Select a PGP key (or multiple) from your PGP key ring and assign it (or them) to this user (instead of the user they're currently associated with)." },
				onAction : controllermethod assignPgpKeyToThisUserButtonClicked
			},
			Button id assignPgpKeyToOtherUserButton {
				graphic : ImageView { image : Image { url : "@assign-pgp-key-to-other-user_24x24.png" } },
				tooltip : Tooltip { text : "Assign the selected PGP key(s) to another user (instead of this one)." },
				onAction : controllermethod assignPgpKeyToOtherUserButtonClicked
			},
			Button id deletePgpKeyButton {
				graphic : ImageView { image : Image { url : "@delete-pgp-key_24x24.png" } },
				tooltip : Tooltip { text : "Delete the selected PGP keys." },
				onAction : controllermethod deletePgpKeyButtonClicked,
				static margin : Insets { left : 8 }
			},

			Button id closeButton {
				graphic : ImageView { image : Image { url : "@close_24x24.png" } },
				tooltip : Tooltip { text : "Close this user (end editing)." },
				onAction : controllermethod closeButtonClicked,
				static margin : Insets { left : 16 }
			},
			static columnIndex : 0,
			static rowIndex : 0,
			static columnSpan : 2,
			static fillWidth : true,
			static hgrow : "ALWAYS"
//				static margin : Insets { bottom : 8 }
		},

		Label {
			text : "First name:",
			static columnIndex : 0,
			static rowIndex : 1
		},
		TextField id firstNameTextField {
			static columnIndex : 1,
			static rowIndex : 1,
			static fillWidth : true,
			static hgrow : "ALWAYS"
		},

		Label {
			text : "Last name:",
			static columnIndex : 0,
			static rowIndex : 2
		},
		TextField id lastNameTextField {
			static columnIndex : 1,
			static rowIndex : 2,
			static fillWidth : true,
			static hgrow : "ALWAYS"
		},

		TableView < EmailWrapper > id emailsTableView {
			editable : true,

			columns : [
				TableColumn < EmailWrapper, String > id emailTableColumn {
					text : "E-mail",
					prefWidth : 300,
					cellValueFactory : PropertyValueFactory < EmailWrapper, String > {
						property : "value"
					}
				}
			],
			
			static columnIndex : 0,
			static rowIndex : 3,
			static columnSpan : 2,
			static fillWidth : true,
			static hgrow : "ALWAYS"
//				static margin : Insets { top : 8 }
		},

		PgpKeyTreePane id pgpKeyTreePane {
			static columnIndex : 0,
			static rowIndex : 4,
			static columnSpan : 2,
			static fillWidth : true,
			static hgrow : "ALWAYS"
//				static margin : Insets { top : 8 }
		}
	}
}
