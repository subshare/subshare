allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    group = 'org.subshare'
    version = '0.1.0-SNAPSHOT'

	sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

   	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'http://cloudstore.codewizards.co/maven/snapshot'
        }
        maven {
            url 'http://cloudstore.codewizards.co/maven/release'
        }
		maven {
			url 'http://www.datanucleus.org/downloads/maven2-nightly'
		}
    }

	project.ext.subshareVersion = version

   	project.ext.bouncycastleVersion = '1.50'
   	project.ext.cloudstoreVersion = '0.9.6-SNAPSHOT'
   	project.ext.slf4jVersion = '1.7.7'
	project.ext.logbackVersion = '1.0.13'
}

subprojects {
    apply plugin: 'eclipse'

	eclipse {
		classpath {
		   downloadSources = true
		}
	}

    dependencies {
		compile "org.slf4j:slf4j-api:$slf4jVersion"
		// jmockit must be *before* junit.
        testCompile 'org.jmockit:jmockit:1.12', 'junit:junit:4.11', 'org.assertj:assertj-core:1.5.0'
		testCompile "org.slf4j:log4j-over-slf4j:$slf4jVersion", "ch.qos.logback:logback-classic:$logbackVersion"
    }

    jar {
        manifest.attributes provider: 'CodeWizards GmbH / SubShare Team'
    }

	tasks.withType(Test) {
		jvmArgs "-XX:MaxPermSize=256m"
		jvmArgs "-Xmx512m"

		String igFa = System.properties['test.ignoreFailures'];
		ignoreFailures = igFa == null ? false : Boolean.parseBoolean(igFa);
// We don't use separate processes but separate threads in the same JVM, because this is faster.
//		maxParallelForks = Runtime.runtime.availableProcessors() * 2
// ...actually we don't do this, yet - and we may very well need multiple JVMs, because quite a few things are configured gobally per JVM!
	}
}
